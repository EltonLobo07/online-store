ROUTE HTTP_METHOD
	INPUT_OBJECT

	OUTPUT_OBJECT

	COMMENTS (optional)
---------------------------------------------------------------------------------------------------
/api/categories GET
	NONE

	[{name, id}, ...]
		id and name data type - String 
---------------------------------------------------------------------------------------------------
/api/login POST
	{ email, password }
		email and password data type - String

	{token, id, name}
		token, id, name data type - String
		token payload - {email, id}
---------------------------------------------------------------------------------------------------
/api/orders POST
	Authorization header set to - "Bearer <TOKEN_RECEIVED_AFTER_LOGIN>"
	NONE

	NONE
	If successful, status code: 201
---------------------------------------------------------------------------------------------------
/api/orders/admin GET
	Authorization header set to - "Bearer <TOKEN_RECEIVED_AFTER_LOGIN>"
	NONE

	[
		{
			user: {
				{email, id}
			},
			products: [
				{
					product: {
						title, price, category, id
					},
					quantity
				}, ...
			],
			date,
			address, 
			id
		}, ...
	]
	email, user.id, title, category, products.product.id, date, address, id data type - String
	price, quantity data type - Number

	Only the admin can use this route after logging in
	Admin is the one having email address - "admin@company.com"
---------------------------------------------------------------------------------------------------
/api/orders/user GET
	Authorization header set to - "Bearer <TOKEN_RECEIVED_AFTER_LOGIN>"
	NONE

	[
		{
			user,
			products: [
				{
					product: {
						title, price, id
					},
					quantity
				}, ...
			],
			date,
			address,
			id
		}, ...
	]
	user, title, products.product.id, date, address, id data type - String
	price, quantity data type - Number
---------------------------------------------------------------------------------------------------
/api/products GET
	NONE

	[
		{
			rating: {
				rate, count
			},
			title,
			price,
			description,
			category: {
				id, name
			},
			image,
			id
		}, ...
	]
	title, description, category.id, name, image, id data type - String
	rate, count, price data type - Number
---------------------------------------------------------------------------------------------------
/api/products/:productId GET
	NONE

	{
		rating: {
			rate, count
		},
		title,
		price,
		description,
		category: {
			id, name
		},
		image,
		id
	}
	title, description, category.id, name, image, id data type - String
	rate, count, price data type - Number
---------------------------------------------------------------------------------------------------
/api/products POST
	Authorization header set to - "Bearer <TOKEN_RECEIVED_AFTER_LOGIN>"
	{
		title, 
		price, 
		description, 
		category, 
		image, 
		rating: {rate, count}
	}
	title, description, category, image data type - String
	price, rate, count data type - Number
	Required fields - title, price, category
	Default values of non-required fields, 
		image: ""
		rate: 0
		count: 0
		description: ""
	0 <= rate <= 5, count >= 0, price >= 0
	If rate > 0, count > 0 always
	If there is a new category name, the new category is added to the database

	The returned object is the same as the returned object of the route: /api/products/:productId GET
---------------------------------------------------------------------------------------------------
/api/users POST
	{
		email,
		password,
		name,
		address
	}
	email, password, name, address data type - String
	Required fields: email, password, name
	Default values of non-required fields,
		address: ""
	password should be at least 5 characters long
	name should be at least 2 characters long

	{
		email, 
		name,
		address,
		shoppingCartProducts: {},
		id
	}
---------------------------------------------------------------------------------------------------
/api/users/:userId/shoppingCartProducts POST
	Authorization header set to - "Bearer <TOKEN_RECEIVED_AFTER_LOGIN>"
	{
		productId
	}
	productId data type - String
	Required fields: productId

	Status code:
		200 if product was added to the shoppingCart
		201 if product was already present in the shoppingCart
---------------------------------------------------------------------------------------------------
/api/users/:userId/shoppingCartProducts/detailed GET
	Authorization header set to - "Bearer <TOKEN_RECEIVED_AFTER_LOGIN>"
	NONE

	[
		{
			product: {
				id, 
				title,
				price,
				description,
				category,
				image,
				rating: {rate, count}
			},
			quantity
		}, ...
	]
---------------------------------------------------------------------------------------------------
/api/users/:userId/shoppingCartProducts GET
	Authorization header set to - "Bearer <TOKEN_RECEIVED_AFTER_LOGIN>"
	NONE	

	{productId1: quantity, ...}
---------------------------------------------------------------------------------------------------
/api/users/:userId/shoppingCartProducts/:productId DELETE
	Authorization header set to - "Bearer <TOKEN_RECEIVED_AFTER_LOGIN>"
	NONE

	Status code: 204
---------------------------------------------------------------------------------------------------
/api/users/:userId/shoppingCartProducts DELETE
	Authorization header set to - "Bearer <TOKEN_RECEIVED_AFTER_LOGIN>"
	NONE

	Status code: 204
---------------------------------------------------------------------------------------------------
/api/users/:userId/shoppingCartProducts/:productId PATCH
	Authorization header set to - "Bearer <TOKEN_RECEIVED_AFTER_LOGIN>"
	{quantity}
	quantity data type - Number
	Required fields: quantity
	quantityNum = floor(max(quantityNum, 0))

	quantityNum (Integer)
	quantityNum >= 0 
---------------------------------------------------------------------------------------------------
api/users/:userId/shoppingCartProducts/:productId GET
	Authorization header set to - "Bearer <TOKEN_RECEIVED_AFTER_LOGIN>"
	NONE

	quantityNum (Integer)
	quantityNum >= 0 
---------------------------------------------------------------------------------------------------
api/users/:userId/shoppingCartProducts/:productId/isProductPresent GET
	Authorization header set to - "Bearer <TOKEN_RECEIVED_AFTER_LOGIN>"
	NONE

	isProductPresent (Boolean)
---------------------------------------------------------------------------------------------------
api/users/:userId/address GET
	Authorization header set to - "Bearer <TOKEN_RECEIVED_AFTER_LOGIN>"
	NONE

	userAddress (String)
---------------------------------------------------------------------------------------------------
api/user/:userId/address PUT
	Authorization header set to - "Bearer <TOKEN_RECEIVED_AFTER_LOGIN>"
	{address}
		address data type - String
		Required fields:
			address

	Status code: 204
